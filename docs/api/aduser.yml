configuration:
  title: AdUser
  description: Api documentation for AdUser
  uri: https://aduser.example.com:8000
versions:
  v0.1:
    status: current
    major: 0
    minor: 1
    methods:
      info:
        label: info
        method: GET
        uri: /info
        description: Return API info.
        response_body:
          type: object
          description: Not implemented, returns empty object.
        response_codes:
          - code: 200
            description: All OK.
      getPixelPath:
        label: getPixelPath
        method: GET
        uri: /getPixelPath
        description: Return API info.
        response_body:
          type: string
          sample: "https://aduser.example.com:8000/34hwjkg4324_{server_id}_{user_id}.gif"
        response_codes:
          - code: 200
            description: All OK.
      pixel:
        label: pixel
        method: GET
        uri: /34hwjkg4324_{server_id}_{user_id}.gif
        description: Return pixel
        request_parameters:
          server_id:
            type: string
            description: AdServer identifier
            optional: false
            sample: 1dsahj32
          user_id:
            type: string
            description: User identifier
            optional: false
            sample: 3724gol5
        response_codes:
          - code: 200
            description: Returns a 1x1 image/gif.
          - code: 302
            description: Redirect to another pixel provider. Returns a 1x1 image/gif.
      getData:
        label: getData
        method: GET
        uri: /getData
        description: Get user data.
        request_parameters:
          uid:
            type: string
            description: AdServer user identifier
          domain:
            type: string
            description: Visited domain
          ua:
            type: string
            description: User-Agent
          ip:
            type: string
            description: User IP
        response_body:
          type: reference
          reference: UserDataResponse
        response_codes:
          - code: 200
            description: All OK.
          - code: 400
            description: Fields missing, etc.
      getSchema:
        label: getSchema
        method: GET
        uri: /getSchema
        description: Return API info.
        response_body:
          type: reference
          reference: schema
        response_codes:
          - code: 200
            description: All OK.
    references:
      schema_keyword:
        type: object
        properties:
          label:
            type: string
            sample: Age bracket
            description: Human readable
          type:
            type: enum
            values:
              - input
              - num
              - bool
              - dict
            sample: dict
          values:
            description: Only used for dict type.
            type: array
            items:
              type: keyword
            optional: true

      schema_meta:
        type: object
        properties:
          ver:
            type: string
            sample: 1.0.3
          name:
            type: string
            sample: best_user_data_provider
      schema:
        type: object
        properties:
          meta:
            type: reference
            reference: schema_meta
          values:
            type: object
            additionalProperties:
                type: reference
                reference: schema_keyword
      UserDataRequest:
        type: object
        properties:
          user:
            type: object
            properties:
              uid:
                type: string
          site:
            type: object
            properties:
              domain:
                type: string
          device:
            type: object
            properties:
              ua:
                type: string
      UserDataResponse:
        type: object
        properties:
          uid:
            type: string
          human_score:
            type: human_score
          keywords:
            type: keyword
    types:
      human_score:
        item:
          type: number
          sample: 0.0
          description: Bot evaluation, 0.0 if bot/crawler, 1.0 if human user.
        format:
          pretty: 0.0-0.1
      keyword:
        item:
          type: object
          additionalProperties:
            type: string
            sample: value of unique key
